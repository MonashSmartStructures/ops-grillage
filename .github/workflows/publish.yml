name: Build and upload to PyPI

on:
  workflow_dispatch:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#      - '[0-9]+.[0-9]+.[0-9]+' # Push events to any matching semantic tag. For example, 1.10.1 or 2.0.0.
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-10.15] # , ubuntu-latest, macos-latest, windows-latest
        python_version: ['3.8', '3.9']
        # For now, OpenSeesPy only supports python 3.8 on Windows
        exclude:
          - os: windows_latest
          - python_version: 3.9

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v2
        name: Install Python ${{ matrix.python_version }}
        with:
          python-version: ${{ matrix.python_version }}
          
      - name: Upgrade pip 
        run: 
          python -m pip install --upgrade pip
          
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          
      - name: Run tests
        run: 
          python -m pytest
          
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.2.0
#        env:
#          CIBW_BEFORE_BUILD: pip install -r requirements.txt

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'
          
      - name: Upgrade pip 
        run: 
          python -m pip install --upgrade pip
          
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          
      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.testpypi_password }}
          # To test: repository_url: https://test.pypi.org/
